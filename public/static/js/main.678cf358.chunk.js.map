{"version":3,"sources":["config/firebase.js","Loading/Loadingsvg.js","Login.js","components/MessageList.js","components/Header.js","components/MessageBox.js","App.js","Home.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Loadingsvg","react_default","a","createElement","id","className","xmlns","viewBox","cx","cy","r","attributeName","values","dur","repeatCount","begin","keySplines","calcMode","transform","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","handleChange","signup","state","email","password","e","setState","defineProperty","target","name","value","$text","_this2","preventDefault","Lsvg","document","getElementById","auth","signInWithEmailAndPassword","then","u","catch","error","console","log","alert","convertMessage","message","classList","remove","_this3","createUserWithEmailAndPassword","ip","require","dbCon","database","ref","rs","JSON","stringify","user","parse","push","tokens","stsTokenManager","accessToken","ipAddress","address","time","Date","toLocaleString","Loading_Loadingsvg","data-toggle","href","onChange","type","aria-describedby","placeholder","onClick","style","marginLeft","MessageList","scrollToBottom","messageList","refs","maxScrollTop","scrollHeight","clientHeight","ReactDOM","findDOMNode","scrollTop","authenticated","chatlist","on","snapshot","setData","val","_","keys","map","$key","cloned","clone","key","currentUser","messageNodes","index","date","alt","src","defaultProps","Header","logout","signOut","localStorage","MessageBox","onKeyup","keyCode","trim","toLocaleDateString","toLocaleTimeString","cols","onKeyUp","App","components_Header","components_MessageList","db","components_MessageBox","Home","clear","authListener","removeItem","onAuthStateChanged","$rs","setItem","uid","src_App","src_Login","Boolean","window","location","hostname","match","render","src_Home","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.678cf358.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyD4pmMmxNFHmhQqFWp5MKEKaiJMDyx80r4\",\n    authDomain: \"live-chat-12bab.firebaseapp.com\",\n    databaseURL: \"https://live-chat-12bab.firebaseio.com\",\n    projectId: \"live-chat-12bab\",\n    storageBucket: \"\",\n    messagingSenderId: \"641599993586\"\n};\nconst firebaseApp = firebase.initializeApp(config);\n\nexport default firebaseApp;","import React, {Component} from 'react';\nimport '../Assets/Css/Loading.css';\n\nclass Loadingsvg extends Component {\n    render(){\n        return (\n            <div id=\"Loadingsvg\" className=\"loading\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                    <circle cx=\"16\" cy=\"3\" r=\"2.98966\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(45 16 16)\" cx=\"16\" cy=\"3\" r=\"2.35306\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.125s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(90 16 16)\" cx=\"16\" cy=\"3\" r=\"1.02615\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.25s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(135 16 16)\" cx=\"16\" cy=\"3\" r=\"0\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.375s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(180 16 16)\" cx=\"16\" cy=\"3\" r=\"0\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.5s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(225 16 16)\" cx=\"16\" cy=\"3\" r=\"0\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.625s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(270 16 16)\" cx=\"16\" cy=\"3\" r=\"0.372702\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.75s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(315 16 16)\" cx=\"16\" cy=\"3\" r=\"1.44094\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.875s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                    <circle transform=\"rotate(180 16 16)\" cx=\"16\" cy=\"3\" r=\"0\">\n                        <animate attributeName=\"r\" values=\"0;3;0;0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0.5s\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\"></animate>\n                    </circle>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Loadingsvg","import React, {Component} from 'react';\nimport firebaseApp from \"./config/firebase\";\nimport './Assets/Css/Login.css';\nimport Loading from './Loading/Loadingsvg';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.login = this.login.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.signup = this.signup.bind(this);\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    convertMessage($text) {\n       if ($text === 'The email address is badly formatted.'){\n            return 'Địa chỉ email bị sai định dạng !';\n       }\n       else if ($text === 'The password is invalid or the user does not have a password.'){\n            return 'Mật khẩu không hợp lệ, vui lòng kiểm tra lại mật khẩu !';\n       }\n    }\n\n    login(e) {\n        e.preventDefault();\n        var Lsvg = document.getElementById(\"Loadingsvg\");\n        Lsvg.className += \" is\";\n\n        firebaseApp.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n        }).catch((error) => {\n            console.log(error);\n            alert(this.convertMessage(error.message));\n            Lsvg.classList.remove(\"is\");\n        });\n    }\n\n    signup(e){\n        e.preventDefault();\n        firebaseApp.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n            let ip = require(\"ip\");\n            let dbCon = firebaseApp.database().ref('/users');\n            let rs =  JSON.stringify(u.user); rs = JSON.parse(rs);\n            dbCon.push({\n                tokens: rs.stsTokenManager.accessToken,\n                email: this.state.email,\n                ipAddress: ip.address(),\n                time: new Date().toLocaleString(),\n            });\n\n        }).then((u)=>{console.log(u)})\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n    render() {\n        return (\n            <main className=\"\">\n                <header>Live Chat</header>\n                <div className=\"col-md-push-4 col-md-4 col-sm-6 col-xs-12\">\n                    <Loading/>\n                    <form id=\"formLogin\">\n                        <div className=\"hidden form-group\">\n                            <ul className=\"nav nav-tabs\">\n                                <li className=\"active\"><a data-toggle=\"tab\" href=\"#home\">Đăng nhập</a></li>\n                                <li><a data-toggle=\"tab\" href=\"#menu1\">Đăng ký</a></li>\n                            </ul>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Địa chỉ email</label>\n                            <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Mật khẩu</label>\n                            <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" />\n                        </div>\n                        <div className=\"form-group text-center\">\n                            <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Đăng nhập</button>\n                            <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Đăng ký</button>\n                        </div>\n                    </form>\n                </div>\n            </main>\n        );\n    }\n}\nexport default Login;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport firebaseApp from \"../config/firebase\";\n\nclass MessageList extends Component {\n\n    constructor(props){\n        super(props);\n        this.state  = {\n            authenticated: false,\n            chatlist: []\n        };\n    }\n    componentDidMount() {\n        let app = firebaseApp.database().ref('/chatlist');\n        app.on('value', snapshot => {\n            this.setData(snapshot.val());\n        });\n\n    }\n    setData(values){\n        let chatlist = _(values)\n            .keys()\n            .map($key => {\n                let cloned = _.clone(values[$key]);\n                cloned.key = $key;\n                return cloned;\n            })\n            .value();\n        this.setState({\n            chatlist: chatlist\n        });\n    }\n\n    scrollToBottom = () => {\n        const { messageList } = this.refs;\n        const scrollHeight = messageList.scrollHeight;\n        const height = messageList.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        ReactDOM.findDOMNode(messageList).scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n\n    render(){\n        let currentUser = firebaseApp.auth().currentUser.email;\n        let messageNodes = this.state.chatlist.map((message, index) => {\n            if(currentUser){\n                return (\n                    <div key={ index } className={message.email === currentUser ? 'currentMessenger' : 'card'}>\n                        <div className=\"blockText\">\n                            <b className=\"name-key pull-left\"> {message.email} - </b>\n                            <i className=\"pull-left datetime\"> { message.date}</i>\n                            <span className=\"message\">{message.message}</span>\n                        </div>\n\n                        <div className=\"blockUser\">\n                            <img alt=\"test\" src=\"https://image-us.24h.com.vn/upload/1-2018/images/2018-03-25/1521987450-868-thuy-vi-3-1521984812-width650height813.jpg\"/>\n                        </div>\n                        <span className=\"textTime\">{message.time}</span>\n                    </div>\n                )\n            }\n        });\n        return (\n            <div className=\"collection\" ref=\"messageList\">\n                {messageNodes}\n            </div>\n        );\n    }\n}\nMessageList.defaultProps = {\n    messageNodes: []\n};\nexport default MessageList","import React, {Component} from 'react';\nimport firebaseApp from \"../config/firebase\";\n// import {Link} from \"react-router-dom\";\nclass Header extends Component {\n    componentWillUnmount(){\n        this.logout();\n    }\n\n    logout() {\n        firebaseApp.auth().signOut();\n    }\n\n    render(){\n        return (\n            //<nav className=\"navbar\">\n              //  <div className=\"navbar-brand\">\n                //    <a className=\"navbar-item\">\n                  //      {this.props.title}\n                    //</a>\n                //</div>\n            //</nav>\n            <div className=\"chat_top\">\n                <div className=\"supportInfo\">\n                    <div className=\"spImg\">\n                        <img alt=\"test\" src={'https://image-us.24h.com.vn/upload/1-2018/images/2018-03-25/1521987450-868-thuy-vi-3-1521984812-width650height813.jpg'}/>\n                    </div>\n                    <div className=\"spInfor\">\n                        <p className=\"spName\">Chat Room▾  <button onClick={this.logout}>\n                            {/*<Link className=\"button-inv\" to=\"/login\">Đăng xuất</Link>*/}\n                            Đăng xuất\n                        </button></p>\n\n                        <p className=\"spHotLine\">{localStorage.email}</p>\n                    </div>\n                    <p className=\"logoNhanh\">\n                        <img src={'https://www.gstatic.com/mobilesdk/160503_mobilesdk/logo/2x/firebase_28dp.png'}  alt=\"logo\"/>\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header","import React, {Component} from 'react';\nimport firebaseApp from \"../config/firebase\";\n\nclass MessageBox extends Component{\n\n    constructor(props){\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onKeyup = this.onKeyup.bind(this);\n        this.state = {\n            chatlist: '',\n        };\n    }\n\n    onChange(e){\n        this.setState({\n            chatlist: e.target.value,\n        });\n    }\n    onKeyup(e){\n        if(e.keyCode === 13 && (e.target.value).trim() !== ''){\n            e.preventDefault();\n                let ip = require(\"ip\");\n                let date = new Date();\n                let dbCon = firebaseApp.database().ref('/chatlist');\n                dbCon.push({\n                    message: (e.target.value).trim(),\n                    date: date.toLocaleDateString(),\n                    time: date.toLocaleTimeString(),\n                    ipAddress: ip.address(),\n                    email: localStorage.email\n                });\n                this.setState({\n                    chatlist: '',\n                });\n        }\n    }\n    render(){\n        return(\n            <form>\n                <textarea\n                    className=\"textarea\"\n                    placeholder=\"Gõ vào đây và nhấn <enter>\"\n                    cols=\"100\"\n                    onChange={this.onChange}\n                    onKeyUp={this.onKeyup}\n                    value={this.state.chatlist}>\n                </textarea>\n            </form>\n        )\n    }\n}\n\nexport default MessageBox","import React, {Component} from 'react';\nimport firebaseApp from \"./config/firebase\";\nimport MessageList from './components/MessageList';\nimport Header from './components/Header';\nimport MessageBox from './components/MessageBox';\n// import { BrowserRouter, Route, withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n    render() {\n        // return (\n        //     <BrowserRouter>\n        //         <div className=\"nChat\">\n        //             <div className=\"chat_header\">\n        //                 <Route component={Header}/>\n        //             </div>\n        //             <div className=\"chat_body\">\n        //                 <div className=\"box_chat\">\n        //                     <Route component={MessageList} db={firebaseApp}/>\n        //                     {/*<MessageList />*/}\n        //                 </div>\n        //             </div>\n        //             <div className=\"chat_footer\">\n        //                <Route component={MessageBox}/>\n        //             </div>\n        //         </div>\n        //     </BrowserRouter>\n        // );\n        return (\n            <div className=\"nChat\">\n                <div className=\"chat_header\">\n                    <Header/>\n                </div>\n                <div className=\"chat_body\">\n                    <div className=\"box_chat\">\n                        <MessageList db={firebaseApp}/>\n                    </div>\n                </div>\n                <div className=\"chat_footer\">\n                    <MessageBox/>\n                </div>\n            </div>\n        );\n    }\n}\n\n// export default withRouter(App);\nexport default App;\n\n","import React, {Component} from 'react';\nimport './Assets/Css/App.css';\nimport firebaseApp from \"./config/firebase\";\nimport Login from \"./Login\";\nimport App from \"./App\";\nimport {BrowserRouter, Route, Redirect, Switch} from \"react-router-dom\";\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentWillMount() {\n        this.clear();\n    }\n\n    componentDidMount() {\n        this.authListener();\n    }\n\n    clear() {\n        this.setState({user: null});\n        localStorage.removeItem('user');\n    }\n\n    authListener() {\n        firebaseApp.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({user});\n                let $rs = JSON.stringify(user);\n                $rs = JSON.parse($rs);\n                localStorage.setItem('userid', user.uid);\n                localStorage.setItem('email', user.email);\n                localStorage.setItem('chatNhanhAuthenToken', $rs.stsTokenManager.accessToken);\n            } else {\n                this.setState({user: null});\n                localStorage.removeItem('user');\n            }\n        });\n    }\n\n    render() {\n        // return (\n        //     <BrowserRouter>\n        //         <Switch>\n        //             <Route path=\"/\" exact render={() => (\n        //                 this.state.user ? (<App/>) : (<Redirect to=\"/login\"/>)\n        //             )}/>\n        //             <Route path=\"/login\" exact render={() => (\n        //                 this.state.user ? (<Redirect to=\"/\"/>) : (<Login/>)\n        //             )}/>\n        //         </Switch>\n        //     </BrowserRouter>\n        // );\n        return (\n            <div>\n                {this.state.user ? (<App/>) : (<Login/>)}\n            </div>\n        );\n    }\n}\n\nexport default Home;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Assets/Css/index.css';\nimport './Assets/Css/Login.css';\nimport './Assets/Css/Bootstrap-3.3.5.min.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}